# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Model/File/Entity'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    App\Model\File\Entity\File\FileRepository: ~
    App\Model\File\Entity\Download\DownloadRepository: ~

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    Redis:
      class: Redis
      calls:
        - method: connect
          arguments:
            - '%env(REDIS_HOST)%'
        - method: auth
          arguments:
            - '%env(REDIS_PASSWORD)%'

    App\Service\Storage:
      arguments: ['@default.storage', '%env(STORAGE_BASE_URL)%']

    App\Model\File\Service\DownloadService:
      arguments: ['@Redis', '%env(TIME_INTERVAL)%', '%env(MAX_REQUESTS)%']
